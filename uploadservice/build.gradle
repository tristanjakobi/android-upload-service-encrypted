apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'

// start - do not modify this if your project is on github
project.ext {
    mavDevelopers = [(github_username): (maintainer)]
    mavSiteUrl = "https://github.com/${github_username}/${github_repository_name}"
    mavGitUrl = mavSiteUrl + '.git'
    bugTrackerUrl = mavSiteUrl + '/issues/'
    mavProjectName = "android-upload-service"
    mavLibraryLicenses = ["Apache-2.0": 'http://www.apache.org/licenses/LICENSE-2.0.txt']
    mavLibraryDescription = "Easily upload files in the background with automatic Android Notification Center progress indication."
    mavVersion = library_version
}
// end - do not modify this if your project is on github

group = 'com.github.tristanjakobi.android-upload-service-encrypted'
version = library_version

android {
    namespace "com.levin.uploadservice"

    defaultConfig {
        compileSdk target_sdk
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName library_version

        // https://commonsware.com/blog/2020/10/14/android-studio-4p1-library-modules-version-code.html
        // https://issuetracker.google.com/issues/158695880#comment15
        buildConfigField 'int', 'VERSION_CODE', "$version_code"
        buildConfigField 'String', 'VERSION_NAME', "\"$library_version\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lintOptions {
        warning 'InvalidPackage'
    }
}

dependencies {
    // Testing - https://developer.android.com/training/testing/set-up-project
    testImplementation "junit:junit:$junit_version"

    // Core library
    androidTestImplementation "androidx.test:core:$androidx_test_core_version"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_rules_version"

    // Assertions
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_junit_version"
    androidTestImplementation "androidx.test.ext:truth:$androidx_test_ext_truth_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"

    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_version"

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mock_web_server_version"
    androidTestImplementation "com.squareup.okhttp3:okhttp-tls:$mock_web_server_version"

    // Support
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$androidx_lifecycle_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

// Create sources JAR task
task releaseSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

// Configure publishing
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.tristanjakobi'
                artifactId = 'android-upload-service-encrypted'
                version = library_version

                // Main artifact
                artifact("$buildDir/outputs/aar/uploadservice-release.aar")
                
                // Sources JAR
                artifact releaseSourcesJar

                pom {
                    name = 'Android Upload Service'
                    description = 'Easily upload files in the background with automatic Android Notification Center progress indication.'
                    url = 'https://github.com/tristanjakobi/android-upload-service-encrypted'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = github_username
                            name = maintainer
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/tristanjakobi/android-upload-service-encrypted.git'
                        developerConnection = 'scm:git:ssh://github.com/tristanjakobi/android-upload-service-encrypted.git'
                        url = 'https://github.com/tristanjakobi/android-upload-service-encrypted/tree/master'
                    }
                }
            }
        }
    }
}
